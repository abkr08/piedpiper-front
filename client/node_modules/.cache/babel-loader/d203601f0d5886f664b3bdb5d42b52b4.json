{"ast":null,"code":"import _classCallCheck from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Route, withRouter, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport IncomingCall from './containers/Call/IncomingCallNotification/IncomingCall';\nimport Register from \"./components/Auth/Register/Register\";\nimport Login from \"./components/Auth/Login/Login\";\nimport Logout from \"./components/Auth/Logout/Logout\";\nimport Navbar from \"./components/UI/Navigation/Navbar\";\nimport ChatScreen from './containers/PiperChat/ChatScreen';\nimport * as actionCreators from './store/actions/actionIndex';\nimport Call from './containers/Call/Call';\nimport \"./App.css\";\nimport Modal from \"./containers/Modal/Modal.js\";\nimport ringtone from './assets/audio/iphone_trap_remix.mp3';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showCallNotification: false\n    };\n\n    _this.acceptCall = function () {\n      _this.ringtoneRef.pause();\n\n      _this.ringtoneRef.currentTime = 0;\n\n      _this.props.callAccepted();\n    };\n\n    _this.rejectCall = function () {\n      _this.ringtoneRef.pause();\n\n      _this.ringtoneRef.currentTime = 0;\n\n      _this.props.callRejected();\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onAuth();\n\n      if (!this.props.isLoggedIn) {\n        this.props.history.push('/login');\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.isLoggedIn) {\n        if (!this.props.channel) {\n          this.props.getCallerReady();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var chatScreen = null;\n\n      if (this.props.isLoggedIn) {\n        if (this.props.incomingCall) {\n          this.ringtoneRef.play();\n          chatScreen = React.createElement(IncomingCall, {\n            acceptCall: this.acceptCall,\n            rejectCall: this.rejectCall,\n            caller: this.props.caller,\n            callType: this.props.callType,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          });\n        } else if (this.props.callOngoing) {\n          chatScreen = React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(Modal, {\n            show: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(Call, {\n            role: \"callee\",\n            callType: this.props.callType,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          })), React.createElement(ChatScreen, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }));\n        } else {\n          chatScreen = React.createElement(ChatScreen, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, chatScreen, React.createElement(\"audio\", {\n        src: ringtone,\n        loop: true,\n        ref: function ref(ring) {\n          return _this2.ringtoneRef = ring;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/register\",\n        component: Register,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: state.auth.token !== null,\n    incomingCall: state.call.incomingCall,\n    callType: state.call.callType,\n    endCall: state.call.endCall,\n    channel: state.call.channel,\n    caller: state.call.caller,\n    callOngoing: state.call.callOngoing\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth() {\n      return dispatch(actionCreators.checkAuthState());\n    },\n    getCallerReady: function getCallerReady() {\n      return dispatch(actionCreators.getCallerReady());\n    },\n    callAccepted: function callAccepted() {\n      return dispatch(actionCreators.callAccepted());\n    },\n    callRejected: function callRejected() {\n      return dispatch(actionCreators.callRejected());\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/src/App.js"],"names":["React","Component","Route","withRouter","Switch","connect","IncomingCall","Register","Login","Logout","Navbar","ChatScreen","actionCreators","Call","Modal","ringtone","App","state","showCallNotification","acceptCall","ringtoneRef","pause","currentTime","props","callAccepted","rejectCall","callRejected","onAuth","isLoggedIn","history","push","channel","getCallerReady","chatScreen","incomingCall","play","caller","callType","callOngoing","ring","mapStateToProps","auth","token","call","endCall","mapDispatchToProps","dispatch","checkAuthState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Route, withRouter, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport IncomingCall from './containers/Call/IncomingCallNotification/IncomingCall';\nimport Register from \"./components/Auth/Register/Register\";\nimport Login from \"./components/Auth/Login/Login\";\nimport Logout from \"./components/Auth/Logout/Logout\";\nimport Navbar from \"./components/UI/Navigation/Navbar\";\nimport ChatScreen from './containers/PiperChat/ChatScreen';\nimport * as actionCreators from './store/actions/actionIndex';\nimport Call from './containers/Call/Call';\nimport \"./App.css\";\nimport Modal from \"./containers/Modal/Modal.js\";\n\nimport ringtone from './assets/audio/iphone_trap_remix.mp3';\n\nclass App extends Component {\n\n  state = {\n    showCallNotification: false\n  }\n  componentDidMount() {\n    this.props.onAuth();\n    if (!this.props.isLoggedIn){\n      this.props.history.push('/login')\n    } \n  }\n  \n  componentDidUpdate () {\n    if (this.props.isLoggedIn){\n      if (!this.props.channel){\n        this.props.getCallerReady();\n      }\n    }\n  }\n  acceptCall = () => {\n    this.ringtoneRef.pause();\n    this.ringtoneRef.currentTime = 0;\n    this.props.callAccepted();\n  }\n\n  rejectCall = () => {\n    this.ringtoneRef.pause();\n    this.ringtoneRef.currentTime = 0;\n    this.props.callRejected();\n  }\n  render() {\n    let chatScreen = null;\n      if (this.props.isLoggedIn){\n        if (this.props.incomingCall){\n          this.ringtoneRef.play();\n          chatScreen = (\n            <IncomingCall acceptCall={this.acceptCall}\n              rejectCall={this.rejectCall}\n              caller={this.props.caller}\n              callType={this.props.callType}\n            />\n          );\n      } else if (this.props.callOngoing){\n        chatScreen = (\n          <React.Fragment>\n            <Modal show><Call role='callee' callType={this.props.callType}/></Modal>\n            <ChatScreen />\n          </React.Fragment>\n          );\n      } else {\n        chatScreen = <ChatScreen />\n      }\n    }\n    return (\n        <div>\n          <Navbar />\n          <div className=\"container\">\n            {chatScreen}\n            <audio src={ringtone} loop ref={ ring => this.ringtoneRef = ring } />\n            <Switch>\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/logout\" component={Logout} />\n            </Switch>\n          </div>\n        </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.auth.token !== null,\n    incomingCall: state.call.incomingCall,\n    callType: state.call.callType,\n    endCall: state.call.endCall,\n    channel: state.call.channel,\n    caller: state.call.caller,\n    callOngoing: state.call.callOngoing\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: () => dispatch(actionCreators.checkAuthState()),\n    getCallerReady: () => dispatch(actionCreators.getCallerReady()),\n    callAccepted: () => dispatch(actionCreators.callAccepted()),\n    callRejected: () => dispatch(actionCreators.callRejected())\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}