{"ast":null,"code":"import pusher from '../../../pusherConfig';\nimport * as actionTypes from '../actions';\nimport { store } from '../../../index';\nvar channel = pusher.subscribe('presence-videocall');\nvar caller = new window.RTCPeerConnection({\n  'iceServers': [{\n    'urls': 'stun:stun.l.google.com:19302'\n  }]\n});\nvar userId = localStorage.getItem('userId');\nvar room;\nsetInterval(function () {\n  return console.log(caller);\n}, 4000);\nchannel.bind(\"pusher:subscription_succeeded\", function (members) {//this.setState({id: this.props.channel.members.me.id, room: this.props.callTo});\n});\nchannel.bind(\"pusher:member_added\", function (member) {\n  console.log(member);\n});\nchannel.bind(\"pusher:member_removed\", function (member) {\n  if (member.id === room) {\n    //this.endCall();\n    alert('call Ended');\n  }\n});\nchannel.bind(\"client-candidate\", function (msg) {\n  console.log('client-candidate');\n\n  if (msg.room === room) {\n    addIceCandidate(new RTCIceCandidate(msg.candidate));\n  }\n});\nchannel.bind(\"client-sdp\", function (msg) {\n  console.log(msg.room, userId);\n\n  if (msg.room === userId) {\n    store.dispatch({\n      type: actionTypes.ON_INCOMING_CALL\n    });\n    var answer = window.confirm(\"You have a call from \" + msg.from + \": Would you like to answer?\");\n\n    if (!answer) {\n      return channel.trigger(\"client-reject\", {\n        room: msg.room,\n        rejected: userId\n      });\n    }\n\n    room = msg.room; //getCam('answer');\n\n    getMedia().then(function (stream) {\n      stream.getTracks().map(function (track) {\n        return addTrack(track, stream);\n      }); //let sessionDesc = new RTCSessionDescription(msg.sdp);\n      //setRemoteDescription(sessionDesc);\n\n      createAnswer();\n      store.dispatch(onLocalStream(stream));\n    });\n  }\n});\nchannel.bind(\"client-answer\", function (answer) {\n  console.log(answer.room, room);\n\n  if (answer.room === room) {\n    console.log(\"answer received\");\n    console.log(answer);\n    var sessionDesc = new RTCSessionDescription(answer.sdp);\n    setRemoteDescription(sessionDesc);\n  }\n});\n\nvar onLocalStream = function onLocalStream(stream) {\n  return {\n    type: actionTypes.ON_LOCAL_STREAM,\n    stream: stream\n  };\n}; //Create and send offer to remote peer on button click\n\n\nexport var callUser = function callUser(user) {\n  room = user;\n  return function (dispatch) {\n    //getCam('not-answer');\n    getMedia().then(function (stream) {\n      stream.getTracks().map(function (track) {\n        return addTrack(track, stream);\n      });\n      createOffer();\n      store.dispatch(onLocalStream(stream));\n    });\n  };\n};\n\nvar getCam = function getCam(param) {\n  //Get local audio/video feed and show it in selfview video element\n  // return dispatch => {\n  getMedia().then(function (stream) {\n    stream.getTracks().forEach(function (track) {\n      return addTrack(track, stream);\n    });\n\n    if (param !== 'answer') {\n      createOffer();\n    }\n\n    store.dispatch(onLocalStream(stream));\n  }).catch(function (error) {\n    console.log(\"an error occured\", error);\n  });\n  ; // }\n};\n\nvar getMedia = function getMedia() {\n  return navigator.mediaDevices.getUserMedia({\n    video: true,\n    audio: true\n  });\n};\n\nvar prepareCaller = function prepareCaller(channel) {\n  return {\n    type: actionTypes.PREPARE_CALLER,\n    channel: channel\n  };\n};\n\nvar onTrack = function onTrack(track) {\n  return {\n    type: actionTypes.ON_TRACK,\n    remoteStream: track.streams[0]\n  };\n};\n\nexport var getCallerReady = function getCallerReady() {\n  return function (dispatch) {\n    dispatch(prepareCaller(channel)); //Listen for ICE Candidates and send them to remote peers\n\n    caller.onicecandidate = function (evt) {\n      if (!evt.candidate) return;\n      onIceCandidate(caller, evt);\n    }; //ontrack handler to receive remote feed and show in remoteview video element\n\n\n    caller.ontrack = function (evt) {\n      dispatch(onTrack(evt));\n    };\n  };\n};\nexport var addIceCandidate = function addIceCandidate(iceCandidate) {\n  // return dispatch => {\n  console.log(iceCandidate);\n  caller.addIceCandidate(iceCandidate); // }\n};\n\nvar onIceCandidate = function onIceCandidate(peer, evt) {\n  if (evt.candidate) {\n    channel.trigger(\"client-candidate\", {\n      candidate: evt.candidate,\n      room: room\n    });\n  }\n};\n\nexport var setLocalDescription = function setLocalDescription(sessionDesc) {\n  caller.setLocalDescription(sessionDesc);\n};\nexport var setRemoteDescription = function setRemoteDescription(sessionDesc) {\n  caller.setRemoteDescription(sessionDesc);\n};\nexport var addTrack = function addTrack(track, stream) {\n  console.log(userId, stream);\n  caller.addTrack(track, stream);\n};\nexport var createAnswer = function createAnswer() {\n  caller.createAnswer().then(function (sdp) {\n    var sessionDesc = new RTCSessionDescription(sdp);\n    setLocalDescription(sessionDesc);\n    console.log(room);\n    channel.trigger(\"client-answer\", {\n      sdp: sdp,\n      room: room\n    });\n  });\n  ;\n};\nexport var createOffer = function createOffer() {\n  // return dispatch => {\n  caller.createOffer().then(function (desc) {\n    var sessionDesc = new RTCSessionDescription(desc);\n    setLocalDescription(sessionDesc);\n    channel.trigger(\"client-sdp\", {\n      sdp: desc,\n      room: room,\n      from: userId\n    });\n  }).catch(function (err) {\n    return console.log(err);\n  }); // }\n};","map":{"version":3,"sources":["/Users/gotzil/Downloads/social-media/client/src/store/actions/actionCreators/callActionCreators.js"],"names":["pusher","actionTypes","store","channel","subscribe","caller","window","RTCPeerConnection","userId","localStorage","getItem","room","setInterval","console","log","bind","members","member","id","alert","msg","addIceCandidate","RTCIceCandidate","candidate","dispatch","type","ON_INCOMING_CALL","answer","confirm","from","trigger","rejected","getMedia","then","stream","getTracks","map","track","addTrack","createAnswer","onLocalStream","sessionDesc","RTCSessionDescription","sdp","setRemoteDescription","ON_LOCAL_STREAM","callUser","user","createOffer","getCam","param","forEach","catch","error","navigator","mediaDevices","getUserMedia","video","audio","prepareCaller","PREPARE_CALLER","onTrack","ON_TRACK","remoteStream","streams","getCallerReady","onicecandidate","evt","onIceCandidate","ontrack","iceCandidate","peer","setLocalDescription","desc","err"],"mappings":"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","sourcesContent":["import pusher from '../../../pusherConfig';\nimport * as actionTypes from '../actions';\nimport { store }  from '../../../index';\n\nconst channel = pusher.subscribe('presence-videocall');\nconst caller = new window.RTCPeerConnection({'iceServers':[{'urls':'stun:stun.l.google.com:19302'}]});\nconst userId = localStorage.getItem('userId');\nlet room;\nsetInterval(()=> console.log(caller), 4000);\nchannel.bind(\"pusher:subscription_succeeded\", members => {\n         \n    //this.setState({id: this.props.channel.members.me.id, room: this.props.callTo});\n    \n  });\n\nchannel.bind(\"pusher:member_added\", member => {\n    console.log(member);\n  });\n\nchannel.bind(\"pusher:member_removed\", member => {\n   \n    if (member.id === room) {\n      //this.endCall();\n      alert('call Ended');\n    }\n    \n  });\nchannel.bind(\"client-candidate\", msg => {\n    console.log('client-candidate')\n    if (msg.room === room) {\n      addIceCandidate(new RTCIceCandidate(msg.candidate));\n    }\n  });\n  channel.bind(\"client-sdp\", msg => {\n      console.log(msg.room, userId)\n    if (msg.room === userId) {\n        store.dispatch({type: actionTypes.ON_INCOMING_CALL});\n        let answer = window.confirm(\n          \"You have a call from \" + msg.from + \": Would you like to answer?\"\n        );\n        if (!answer) {\n          return channel.trigger(\"client-reject\", { room: msg.room, rejected: userId });\n        }\n        room = msg.room;\n        //getCam('answer');\n        getMedia().then(stream => {\n        stream.getTracks().map(track => addTrack(track, stream));\n        //let sessionDesc = new RTCSessionDescription(msg.sdp);\n        //setRemoteDescription(sessionDesc);\n        createAnswer(); \n        store.dispatch(onLocalStream(stream));\n        })\n             \n      }\n    });\n\n    channel.bind(\"client-answer\", answer => {\n        console.log(answer.room, room)\n        if (answer.room === room) {\n            console.log(\"answer received\");\n            console.log(answer);\n            let sessionDesc = new RTCSessionDescription(answer.sdp);\n            setRemoteDescription(sessionDesc);\n          }\n        });\n    \nconst onLocalStream = stream => {\n    return {\n        type: actionTypes.ON_LOCAL_STREAM,\n        stream: stream\n    }\n}\n//Create and send offer to remote peer on button click\nexport const callUser = user => {\n    room = user;\n    return dispatch => {\n        //getCam('not-answer');\n        getMedia().then(stream => {\n            stream.getTracks().map(track => addTrack(track, stream));\n            createOffer();\n            store.dispatch(onLocalStream(stream));\n        })\n    }\n  }    \nconst getCam = (param) => {\n            \n    //Get local audio/video feed and show it in selfview video element\n    // return dispatch => {\n        getMedia().then(stream => {\n\n            stream.getTracks().forEach(track => addTrack(track, stream));\n            \n            if (param !== 'answer'){\n                createOffer();\n            }\n            store.dispatch(onLocalStream(stream));\n        \n        })\n        .catch(error => {\n          console.log(\"an error occured\", error);\n        });;\n    // }\n  }\n\nconst getMedia = () => {\n    return navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n}\nconst prepareCaller = channel => {\n    return {\n        type: actionTypes.PREPARE_CALLER,\n        channel: channel\n    }\n}\nconst onTrack = track => {\n    return {\n        type: actionTypes.ON_TRACK,\n        remoteStream: track.streams[0]\n    }\n}\nexport const getCallerReady = () => {\n    return dispatch => {\n     dispatch(prepareCaller(channel));\n    //Listen for ICE Candidates and send them to remote peers\n    caller.onicecandidate = evt => {\n      if (!evt.candidate) return;\n      onIceCandidate(caller, evt);\n    };\n    //ontrack handler to receive remote feed and show in remoteview video element\n    caller.ontrack = evt => {\n        dispatch(onTrack(evt));\n    };\n    }\n}\nexport const addIceCandidate = iceCandidate => {\n    // return dispatch => {\n        console.log(iceCandidate);\n        caller.addIceCandidate(iceCandidate);\n    // }\n}\n\nconst onIceCandidate = (peer, evt) => {\n    if (evt.candidate) {   \n      channel.trigger(\"client-candidate\", {\n        candidate: evt.candidate,\n        room: room\n      });\n    }\n  }\n\n  export const setLocalDescription = sessionDesc => {\n    caller.setLocalDescription(sessionDesc);\n}\n\nexport const setRemoteDescription = sessionDesc => {\n    caller.setRemoteDescription(sessionDesc);\n}\n\nexport const addTrack = (track, stream) => {\n    console.log(userId, stream);\n    caller.addTrack(track, stream);\n}\n\nexport const createAnswer = () => {\n    caller.createAnswer().then(sdp => {\n        const sessionDesc = new RTCSessionDescription(sdp);\n        setLocalDescription(sessionDesc);\n        console.log(room);\n        channel.trigger(\"client-answer\", {\n            sdp: sdp,\n            room: room\n          });\n        });;\n}\n\nexport const createOffer = () => {\n    // return dispatch => {\n        \n        caller.createOffer().then(desc => {\n            let sessionDesc = new RTCSessionDescription(desc);\n            setLocalDescription(sessionDesc);\n            channel.trigger(\"client-sdp\", {\n              sdp: desc,\n              room: room,\n              from: userId\n            });\n        }).catch(err => console.log(err));\n// }\n}"]},"metadata":{},"sourceType":"module"}