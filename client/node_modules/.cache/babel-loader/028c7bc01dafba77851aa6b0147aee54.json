{"ast":null,"code":"import _toConsumableArray from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actions';\nvar initialState = {\n  currentUser: null,\n  contacts: [],\n  currentRoom: null,\n  messages: [],\n  unopenedMessages: {}\n};\n\nvar removeItem = function removeItem(obj, item) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    if (key !== item) {\n      return _objectSpread({}, acc, _defineProperty({}, key, obj[key]));\n    }\n\n    return acc;\n  }, {});\n};\n\nvar chatReducer = function chatReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.CHAT_INIT_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: action.currentUser\n      });\n\n    case actionTypes.FETCH_MESSAGES_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          messages: action.messages,\n          currentRoom: action.room,\n          unopenedMessages: removeItem(state.unopenedMessages, action.room.id)\n        });\n      }\n\n    case actionTypes.ON_NEW_MESSAGE:\n      if (action.belongsToCurrentRoom) {\n        return _objectSpread({}, state, {\n          messages: [].concat(_toConsumableArray(state.messages), [action.message])\n        });\n      } else {\n        var unopenedMessagesCopy = _objectSpread({}, state.unopenedMessages);\n\n        if (unopenedMessagesCopy.hasOwnProperty(action.message.roomId)) {\n          unopenedMessagesCopy[action.message.roomId].push(action.message);\n        } else {\n          unopenedMessagesCopy[action.message.roomId] = [action.message];\n        }\n\n        return _objectSpread({}, state, {\n          unopenedMessages: unopenedMessagesCopy\n        });\n      }\n\n    case 'ON_ROOMS_FETCHED':\n      return _objectSpread({}, state, {\n        contacts: action.contacts\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default chatReducer;","map":{"version":3,"sources":["/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/src/store/reducers/chatReducer.js"],"names":["actionTypes","initialState","currentUser","contacts","currentRoom","messages","unopenedMessages","removeItem","obj","item","Object","keys","reduce","acc","key","chatReducer","state","action","type","CHAT_INIT_SUCCESS","FETCH_MESSAGES_SUCCESS","room","id","ON_NEW_MESSAGE","belongsToCurrentRoom","message","unopenedMessagesCopy","hasOwnProperty","roomId","push"],"mappings":";;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,oBAA7B;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,WAAW,EAAE,IAHI;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,gBAAgB,EAAE;AALD,CAArB;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,IAAN,EAAe;AAC9B,SAAOC,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,MAAjB,CAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzC,QAAIA,GAAG,KAAKL,IAAZ,EAAkB;AAChB,+BAAWI,GAAX,sBAAiBC,GAAjB,EAAuBN,GAAG,CAACM,GAAD,CAA1B;AACD;;AACD,WAAOD,GAAP;AACD,GALI,EAKF,EALE,CAAP;AAMH,CAPD;;AAQA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBf,YAAyB;AAAA,MAAXgB,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,WAAW,CAACmB,iBAAjB;AACI,+BACOH,KADP;AACcd,QAAAA,WAAW,EAAEe,MAAM,CAACf;AADlC;;AAGJ,SAAKF,WAAW,CAACoB,sBAAjB;AAAyC;AACrC,iCACOJ,KADP;AACcX,UAAAA,QAAQ,EAAEY,MAAM,CAACZ,QAD/B;AACyCD,UAAAA,WAAW,EAAEa,MAAM,CAACI,IAD7D;AAEIf,UAAAA,gBAAgB,EAAEC,UAAU,CAACS,KAAK,CAACV,gBAAP,EAAyBW,MAAM,CAACI,IAAP,CAAYC,EAArC;AAFhC;AAIH;;AACD,SAAKtB,WAAW,CAACuB,cAAjB;AACI,UAAIN,MAAM,CAACO,oBAAX,EAAgC;AAC5B,iCACOR,KADP;AACcX,UAAAA,QAAQ,+BAAMW,KAAK,CAACX,QAAZ,IAAsBY,MAAM,CAACQ,OAA7B;AADtB;AAGH,OAJD,MAIO;AACH,YAAIC,oBAAoB,qBAAOV,KAAK,CAACV,gBAAb,CAAxB;;AACA,YAAIoB,oBAAoB,CAACC,cAArB,CAAoCV,MAAM,CAACQ,OAAP,CAAeG,MAAnD,CAAJ,EAA+D;AAC3DF,UAAAA,oBAAoB,CAACT,MAAM,CAACQ,OAAP,CAAeG,MAAhB,CAApB,CAA4CC,IAA5C,CAAiDZ,MAAM,CAACQ,OAAxD;AACH,SAFD,MAEO;AACHC,UAAAA,oBAAoB,CAACT,MAAM,CAACQ,OAAP,CAAeG,MAAhB,CAApB,GAA8C,CAACX,MAAM,CAACQ,OAAR,CAA9C;AACH;;AACD,iCACOT,KADP;AACcV,UAAAA,gBAAgB,EAAEoB;AADhC;AAGH;;AACL,SAAK,kBAAL;AACI,+BACOV,KADP;AACcb,QAAAA,QAAQ,EAAEc,MAAM,CAACd;AAD/B;;AAGJ;AACI,aAAOa,KAAP;AAhCR;AAkCH,CAnCD;;AAqCA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from '../actions/actions';\n\n\nconst initialState = {\n    currentUser: null,\n    contacts: [],\n    currentRoom: null,\n    messages: [],\n    unopenedMessages: {}\n};\n\nconst removeItem = (obj, item) => {\n    return Object.keys(obj).reduce((acc, key) => {\n        if (key !== item) {\n          return {...acc, [key]: obj[key]}\n        }\n        return acc;\n      }, {})\n} \nconst chatReducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.CHAT_INIT_SUCCESS:\n            return {\n                ...state, currentUser: action.currentUser\n            }\n        case actionTypes.FETCH_MESSAGES_SUCCESS: {\n            return {\n                ...state, messages: action.messages, currentRoom: action.room,\n                unopenedMessages: removeItem(state.unopenedMessages, action.room.id)\n            }\n        }\n        case actionTypes.ON_NEW_MESSAGE: \n            if (action.belongsToCurrentRoom){\n                return {\n                    ...state, messages: [...state.messages, action.message]\n                }\n            } else {\n                let unopenedMessagesCopy = {...state.unopenedMessages};\n                if (unopenedMessagesCopy.hasOwnProperty(action.message.roomId)){\n                    unopenedMessagesCopy[action.message.roomId].push(action.message);\n                } else {\n                    unopenedMessagesCopy[action.message.roomId] = [action.message];\n                }\n                return { \n                    ...state, unopenedMessages: unopenedMessagesCopy\n               }  \n            }\n        case 'ON_ROOMS_FETCHED':\n            return {\n                ...state, contacts: action.contacts\n            }\n        default: \n            return state;\n    }\n}\n\nexport default chatReducer;"]},"metadata":{},"sourceType":"module"}