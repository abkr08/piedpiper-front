{"ast":null,"code":"import _objectSpread from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gotzil/Desktop/Pied Piper Chat/client/src/components/Auth/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../../store/actions/actionIndex';\nimport classes from './Login.module.css';\nimport Input from '../../UI/Input/Input';\nimport { checkValidity, updateObject } from '../../../shared/utility';\nimport Button from '../../UI/Button/Button';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      controls: {\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            placeholder: 'Enter your email',\n            type: 'email'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            placeholder: 'Enter your password',\n            type: 'password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 8\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      formIsValid: false\n    };\n\n    _this.onChange = function (event, inputIdentifier) {\n      var value = event.target.value;\n      var updatedFormElement = updateObject(_this.state.controls[inputIdentifier], {\n        value: value,\n        touched: true,\n        valid: checkValidity(value, _this.state.controls[inputIdentifier].validation)\n      });\n      var updatedForm = updateObject(_this.state.controls, _defineProperty({}, inputIdentifier, updatedFormElement));\n      var formIsValid = true;\n\n      for (var key in updatedForm) {\n        formIsValid = updatedForm[key].valid && formIsValid;\n      }\n\n      _this.setState({\n        controls: updatedForm,\n        formIsValid: formIsValid\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      var controls = _objectSpread({}, _this.state);\n\n      var data = {};\n\n      for (var control in controls) {\n        data[control] = controls[control]['value'];\n      }\n\n      console.log(data); //this.props.onLogIn(data);\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var redirect = null;\n\n      if (this.props.isLoggedIn) {\n        redirect = React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }\n\n      var formElements = [];\n\n      for (var key in this.state.controls) {\n        formElements.push({\n          id: key,\n          config: this.state.controls[key]\n        });\n      }\n\n      var form = formElements.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          shouldValidate: formElement.config.validation,\n          touched: formElement.config.touched,\n          changed: function changed(event) {\n            return _this2.onChange(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: classes.Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, redirect, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" Login \"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, form, React.createElement(Button, {\n        btnType: \"Success\",\n        disabled: !this.state.formIsValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Log in\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: state.auth.token !== null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onLogIn: function onLogIn(data) {\n      return dispatch(actionCreators.onLogIn(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/gotzil/Desktop/Pied Piper Chat/client/src/components/Auth/Login/Login.js"],"names":["React","Component","Redirect","connect","actionCreators","classes","Input","checkValidity","updateObject","Button","Login","state","controls","email","elementType","elementConfig","placeholder","type","value","validation","required","isEmail","valid","touched","password","minLength","formIsValid","onChange","event","inputIdentifier","target","updatedFormElement","updatedForm","key","setState","onSubmit","e","preventDefault","data","control","console","log","redirect","props","isLoggedIn","formElements","push","id","config","form","map","formElement","mapStateToProps","auth","token","mapDispatchToProps","dispatch","onLogIn"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Redirect} from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../../store/actions/actionIndex';\r\nimport classes from './Login.module.css'; \r\nimport Input from '../../UI/Input/Input';\r\nimport { checkValidity, updateObject } from '../../../shared/utility';\r\nimport Button from '../../UI/Button/Button'; \r\n\r\nclass Login extends Component {\r\n\r\n  state = {\r\n      controls: {\r\n        email: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n              placeholder: 'Enter your email',\r\n              type: 'email'\r\n          },\r\n          value: '',\r\n          validation: {\r\n              required: true,\r\n              isEmail: true\r\n          },\r\n          valid: false,\r\n          touched: false\r\n      },\r\n      password: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n            placeholder: 'Enter your password',\r\n            type: 'password'\r\n        }, \r\n        value: '',\r\n        validation: {\r\n            required: true,\r\n            minLength: 8\r\n        },\r\n        valid: false,\r\n        touched: false\r\n    }\r\n      },\r\n      formIsValid: false\r\n  }\r\n\r\n  onChange = (event, inputIdentifier) => {\r\n    const { value } = event.target;\r\n    const updatedFormElement = updateObject(this.state.controls[inputIdentifier], {\r\n      value: value,\r\n      touched: true,\r\n      valid: checkValidity(value, this.state.controls[inputIdentifier].validation)\r\n    });\r\n    const updatedForm = updateObject(this.state.controls, {\r\n      [inputIdentifier]: updatedFormElement\r\n    });\r\n    let formIsValid = true;\r\n  for (let key in updatedForm){\r\n      formIsValid = updatedForm[key].valid && formIsValid;\r\n  }\r\n  this.setState({controls: updatedForm, formIsValid: formIsValid});\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const controls = {...this.state}\r\n    const data = {};\r\n    for (let control in controls){\r\n      data[control] = controls[control]['value'];\r\n    }\r\n    console.log(data);\r\n    //this.props.onLogIn(data);\r\n  };\r\n  render() {\r\n    let redirect = null;\r\n    if (this.props.isLoggedIn){\r\n      redirect = <Redirect to=\"/\"/>;\r\n    }\r\n    let formElements = [];\r\n    for (let key in this.state.controls){\r\n      formElements.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n    const form = formElements.map(formElement => {\r\n      return <Input \r\n                key={formElement.id} elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={ event => this.onChange(event, formElement.id)}\r\n            />\r\n    })\r\n    return (\r\n      <div className={classes.Login}>\r\n      {redirect}\r\n        <h2> Login </h2>\r\n        <form onSubmit={this.onSubmit}>\r\n          {form}\r\n          <Button btnType='Success' disabled={!this.state.formIsValid}>Log in</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.auth.token !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogIn: (data) => dispatch(actionCreators.onLogIn(data))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}