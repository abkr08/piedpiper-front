{"ast":null,"code":"import * as actionTypes from '../actions';\nimport axios from '../../../Axios';\n\nvar logInSuccess = function logInSuccess(token, userId) {\n  return {\n    type: actionTypes.LOG_IN,\n    token: token,\n    userId: userId\n  };\n};\n\nvar checkTokenValidity = function checkTokenValidity(expiresIn) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expiresIn * 1000);\n  };\n};\n\nexport var onLogIn = function onLogIn(data) {\n  return function (dispatch) {\n    axios.post(\"/login\", data).then(function (res) {\n      var _res$data = res.data,\n          userId = _res$data.userId,\n          token = _res$data.token,\n          expiresIn = _res$data.expiresIn;\n      var expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"userId\", userId);\n      localStorage.setItem(\"expiresIn\", expirationDate);\n      dispatch(logInSuccess(res.data.token, userId)); //dispatch(checkTokenValidity(expiresIn));\n    }).catch(function (err) {\n      dispatch(logInFailed(err));\n    });\n  };\n};\n\nvar logInFailed = function logInFailed(err) {\n  return {\n    type: actionTypes.LOG_IN_FAILED,\n    error: err\n  };\n};\n\nvar logout = function logout() {\n  return {\n    type: actionTypes.LOG_OUT\n  };\n};\n\nexport var onLogout = function onLogout() {\n  return function (dispatch) {\n    //delete token saved in local storage\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"expiresIn\");\n    dispatch(logout());\n  };\n};\n\nvar authSuccess = function authSuccess(token, userId) {\n  return {\n    type: actionTypes.ON_AUTH,\n    token: token,\n    userId: userId\n  };\n};\n\nexport var checkAuthState = function checkAuthState() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      var expirationDate = new Date(localStorage.getItem('expiresIn'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout);\n      } else {\n        var userId = localStorage.getItem('userId');\n        dispatch(authSuccess(token, userId));\n        dispatch(checkTokenValidity((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};\n\nvar registered = function registered() {\n  return {\n    type: actionTypes.ON_REGISTER\n  };\n};\n\nvar registrationFailed = function registrationFailed(err) {\n  return {\n    type: actionTypes.ON_REGISTRATION_FAILED,\n    error: err\n  };\n};\n\nexport var onRegister = function onRegister(data) {\n  return function (dispatch) {\n    axios.post(\"/register\", data).then(function (res) {\n      dispatch(registered());\n    }).catch(function (err) {\n      dispatch(registrationFailed());\n    });\n  };\n};","map":{"version":3,"sources":["/Users/gotzil/Downloads/social-media/client/src/store/actions/actionCreators/authActionCreators.js"],"names":["actionTypes","axios","logInSuccess","token","userId","type","LOG_IN","checkTokenValidity","expiresIn","dispatch","setTimeout","logout","onLogIn","data","post","then","res","expirationDate","Date","getTime","localStorage","setItem","catch","err","logInFailed","LOG_IN_FAILED","error","LOG_OUT","onLogout","removeItem","authSuccess","ON_AUTH","checkAuthState","getItem","registered","ON_REGISTER","registrationFailed","ON_REGISTRATION_FAILED","onRegister"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions';\nimport axios from '../../../Axios';\n\nconst logInSuccess = (token, userId) => {\n    return {\n        type: actionTypes.LOG_IN,\n        token: token, \n        userId: userId\n    }\n}\nconst checkTokenValidity = expiresIn => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expiresIn * 1000);\n    }\n}\nexport const onLogIn = (data) => {\n    return dispatch => {\n        axios.post(\"/login\", data)\n         .then(res => {\n           const { userId, token, expiresIn } = res.data;\n           const expirationDate = new Date (new Date().getTime() + expiresIn * 1000);\n           localStorage.setItem(\"token\", token);\n           localStorage.setItem(\"userId\", userId);\n           localStorage.setItem(\"expiresIn\", expirationDate);\n           dispatch(logInSuccess(res.data.token, userId));\n           //dispatch(checkTokenValidity(expiresIn));\n         })\n         .catch(err => {\n             dispatch(logInFailed(err))\n         })\n    }\n}\nconst logInFailed = err => {\n    return {\n        type: actionTypes.LOG_IN_FAILED,\n        error: err \n    }\n}\nconst logout = () => {\n    return {\n        type: actionTypes.LOG_OUT\n    }\n}\n\nexport const onLogout = () => {\n    return dispatch => {\n        //delete token saved in local storage\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userId\");\n        localStorage.removeItem(\"expiresIn\");\n        dispatch(logout());\n    }\n}\n\nconst authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.ON_AUTH,\n        token: token,\n        userId: userId\n    }\n}\nexport const checkAuthState = () => {\n    return dispatch => {\n        let token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date (localStorage.getItem('expiresIn'));\n            if (expirationDate <= new Date()){\n                dispatch(logout)\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkTokenValidity((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            \n            }\n        }\n    }\n}\nconst registered = () => {\n    return {\n        type: actionTypes.ON_REGISTER,\n        \n    }\n}\nconst registrationFailed = err => {\n    return {\n        type: actionTypes.ON_REGISTRATION_FAILED,\n        error: err\n    }\n}\nexport const onRegister = data => {\n    return dispatch => {\n        axios.post(\"/register\", data)\n            .then(res => {\n                dispatch(registered())\n            })\n            .catch(err => {\n                dispatch(registrationFailed())\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}