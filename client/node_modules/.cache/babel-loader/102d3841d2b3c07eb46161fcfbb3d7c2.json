{"ast":null,"code":"import pusher from '../../../pusherConfig';\nimport * as actionTypes from '../actions';\nvar channel = pusher.subscribe('presence-videocall');\nvar caller = new window.RTCPeerConnection({\n  'iceServers': [{\n    'urls': 'stun:stun.l.google.com:19302'\n  }]\n});\nchannel.bind(\"client-candidate\", function (msg) {\n  // if (msg.room === this.state.room) {\n  addIceCandidate(new RTCIceCandidate(msg.candidate)); //}\n});\nchannel.bind(\"client-sdp\", function (msg) {\n  alert('You\\'ve got a call!!');\n});\n\nvar prepareCaller = function prepareCaller(channel) {\n  return {\n    type: actionTypes.PREPARE_CALLER,\n    channel: channel\n  };\n};\n\nvar onTrack = function onTrack(track) {\n  return {\n    type: actionTypes.ON_TRACK,\n    remoteStream: track.stream\n  };\n};\n\nexport var getCallerReady = function getCallerReady() {\n  return function (dispatch) {\n    dispatch(prepareCaller(channel)); //Listen for ICE Candidates and send them to remote peers\n\n    caller.onicecandidate = function (evt) {\n      if (!evt.candidate) return;\n      console.log(\"onicecandidate called\");\n      console.log(evt);\n      onIceCandidate(caller, evt);\n    }; //onaddstream handler to receive remote feed and show in remoteview video element\n\n\n    caller.ontrack = function (evt) {\n      console.log(evt); //this.remoteVideoRef.srcObject = evt.stream;\n\n      dispatch(onTrack(evt));\n    };\n  };\n};\nexport var addIceCandidate = function addIceCandidate(iceCandidate) {\n  console.log(iceCandidate);\n  return function (dispatch) {\n    console.log(iceCandidate);\n    caller.addIceCandidate(iceCandidate);\n  };\n};\n\nvar onIceCandidate = function onIceCandidate(peer, evt) {\n  if (evt.candidate) {\n    channel.trigger(\"client-candidate\", {\n      candidate: evt.candidate // room: room\n\n    });\n  }\n};\n\nexport var setLocalDescription = function setLocalDescription(sessionDesc) {\n  return function (dispatch) {\n    console.log('setLocalDesc', sessionDesc);\n    caller.setLocalDescription(sessionDesc);\n  };\n};\nexport var setRemoteDescription = function setRemoteDescription(sessionDesc) {\n  console.log('setRemoteDesc', sessionDesc);\n  return function (dispatch) {\n    caller.setRemoteDescription(sessionDesc);\n  };\n};\nexport var addTrack = function addTrack(track, stream) {\n  return function (dispatch) {\n    caller.addTrack(track, stream);\n  };\n};\nexport var createAnswer = function createAnswer() {\n  return function (dispatch) {\n    caller.createAnswer().then(function (sdp) {\n      var sessionDesc = new RTCSessionDescription(sdp);\n      setLocalDescription(sessionDesc);\n      channel.trigger(\"client-answer\", {\n        sdp: sdp,\n        room: 'opp'\n      });\n    });\n    ;\n  };\n};\nexport var createOffer = function createOffer() {\n  return function (dispatch) {\n    caller.createOffer().then(function (desc) {\n      var sessionDesc = new RTCSessionDescription(desc);\n      setLocalDescription(sessionDesc);\n      channel.trigger(\"client-sdp\", {\n        sdp: desc,\n        room: 'opp',\n        from: 'gotzil'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/gotzil/Downloads/social-media/client/src/store/actions/actionCreators/callActionCreators.js"],"names":["pusher","actionTypes","channel","subscribe","caller","window","RTCPeerConnection","bind","msg","addIceCandidate","RTCIceCandidate","candidate","alert","prepareCaller","type","PREPARE_CALLER","onTrack","track","ON_TRACK","remoteStream","stream","getCallerReady","dispatch","onicecandidate","evt","console","log","onIceCandidate","ontrack","iceCandidate","peer","trigger","setLocalDescription","sessionDesc","setRemoteDescription","addTrack","createAnswer","then","sdp","RTCSessionDescription","room","createOffer","desc","from"],"mappings":"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","sourcesContent":["import pusher from '../../../pusherConfig';\nimport * as actionTypes from '../actions';\n\nconst channel = pusher.subscribe('presence-videocall');\nconst caller = new window.RTCPeerConnection({'iceServers':[{'urls':'stun:stun.l.google.com:19302'}]});\n\n\nchannel.bind(\"client-candidate\", msg => {\n\n    // if (msg.room === this.state.room) {\n      addIceCandidate(new RTCIceCandidate(msg.candidate));\n    //}\n  });\nchannel.bind(\"client-sdp\", msg => {\n      alert('You\\'ve got a call!!');\n  });\nconst prepareCaller = channel => {\n    return {\n        type: actionTypes.PREPARE_CALLER,\n        channel: channel\n    }\n}\nconst onTrack = track => {\n    return{\n        type: actionTypes.ON_TRACK,\n        remoteStream: track.stream\n    }\n}\nexport const getCallerReady = () => {\n    return dispatch => {\n     dispatch(prepareCaller(channel));\n    //Listen for ICE Candidates and send them to remote peers\n    caller.onicecandidate = evt => {\n      if (!evt.candidate) return;\n      console.log(\"onicecandidate called\");\n      console.log(evt);\n      onIceCandidate(caller, evt);\n    };\n    //onaddstream handler to receive remote feed and show in remoteview video element\n    caller.ontrack = evt => {\n      console.log(evt);\n  //this.remoteVideoRef.srcObject = evt.stream;\n  dispatch(onTrack(evt));\n    };\n    }\n}\nexport const addIceCandidate = iceCandidate => {\n    console.log(iceCandidate);\n    return dispatch => {\n        console.log(iceCandidate);\n    caller.addIceCandidate(iceCandidate);\n    }\n}\n\nconst onIceCandidate = (peer, evt) => {\n    if (evt.candidate) {\n      channel.trigger(\"client-candidate\", {\n        candidate: evt.candidate,\n        // room: room\n      });\n    }\n  }\n\n  export const setLocalDescription = sessionDesc => {\n      return dispatch => {\n          console.log('setLocalDesc', sessionDesc);\n        caller.setLocalDescription(sessionDesc);\n      }\n}\n\nexport const setRemoteDescription = sessionDesc => {\n    console.log('setRemoteDesc', sessionDesc )\n    return dispatch => {\n        caller.setRemoteDescription(sessionDesc);\n    }\n}\n\nexport const addTrack = (track, stream) => {\n    return dispatch => {\n        caller.addTrack(track, stream);\n    }\n}\n\nexport const createAnswer = () => {\n    return dispatch => {\n        caller.createAnswer().then(sdp => {\n        const sessionDesc = new RTCSessionDescription(sdp);\n          setLocalDescription(sessionDesc);\n          channel.trigger(\"client-answer\", {\n            sdp: sdp,\n            room: 'opp'\n          });\n        });;\n    }\n}\n\nexport const createOffer = () => {\n    return dispatch => {\n        caller.createOffer().then(desc => {\n            let sessionDesc = new RTCSessionDescription(desc);\n            setLocalDescription(sessionDesc);\n            channel.trigger(\"client-sdp\", {\n              sdp: desc,\n              room: 'opp',\n              from: 'gotzil'\n            });\n        })\n}\n}"]},"metadata":{},"sourceType":"module"}