{"ast":null,"code":"import _classCallCheck from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Route, withRouter, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport IncomingCall from './containers/Call/IncomingCallNotification/IncomingCall';\nimport Register from \"./components/Auth/Register/Register\";\nimport Login from \"./components/Auth/Login/Login\";\nimport Logout from \"./components/Auth/Logout/Logout\";\nimport Navbar from \"./components/UI/Navigation/Navbar\";\nimport ChatScreen from './containers/PiperChat/ChatScreen';\nimport * as actionCreators from './store/actions/actionIndex';\nimport Call from './containers/Call/Call';\nimport \"./App.css\";\nimport Modal from \"./containers/Modal/Modal.js\";\nimport ringtone from './assets/audio/iphone_trap_remix.mp3';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onAuth();\n\n      if (!this.props.isLoggedIn) {\n        this.props.history.push('/login');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var chatScreen = null;\n\n      if (this.props.isLoggedIn) {\n        if (this.props.incomingCall) {\n          this.ringtoneRef.play();\n          chatScreen = React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(Modal, {\n            show: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(Call, {\n            callType: this.props.callType,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          })), React.createElement(ChatScreen, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }));\n        } else {\n          chatScreen = React.createElement(ChatScreen, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          });\n        }\n      }\n\n      if (this.props.endCall) {\n        chatScreen = React.createElement(ChatScreen, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(IncomingCall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, chatScreen, React.createElement(\"audio\", {\n        src: ringtone,\n        ref: function ref(ring) {\n          return _this.ringtoneRef = ring;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/register\",\n        component: Register,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: state.auth.token !== null,\n    incomingCall: state.call.incomingCall,\n    callType: state.call.callType,\n    endCall: state.call.endCall\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth() {\n      return dispatch(actionCreators.checkAuthState());\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/src/App.js"],"names":["React","Component","Route","withRouter","Switch","connect","IncomingCall","Register","Login","Logout","Navbar","ChatScreen","actionCreators","Call","Modal","ringtone","App","props","onAuth","isLoggedIn","history","push","chatScreen","incomingCall","ringtoneRef","play","callType","endCall","ring","mapStateToProps","state","auth","token","call","mapDispatchToProps","dispatch","checkAuthState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Route, withRouter, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport IncomingCall from './containers/Call/IncomingCallNotification/IncomingCall';\nimport Register from \"./components/Auth/Register/Register\";\nimport Login from \"./components/Auth/Login/Login\";\nimport Logout from \"./components/Auth/Logout/Logout\";\nimport Navbar from \"./components/UI/Navigation/Navbar\";\nimport ChatScreen from './containers/PiperChat/ChatScreen';\nimport * as actionCreators from './store/actions/actionIndex';\nimport Call from './containers/Call/Call';\nimport \"./App.css\";\nimport Modal from \"./containers/Modal/Modal.js\";\n\nimport ringtone from './assets/audio/iphone_trap_remix.mp3';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onAuth();\n    if (!this.props.isLoggedIn){\n      this.props.history.push('/login')\n    }\n  }\n \n  render() {\n    let chatScreen = null;\n    if (this.props.isLoggedIn){\n      if (this.props.incomingCall){\n        this.ringtoneRef.play();\n      chatScreen = (\n        <React.Fragment>\n          <Modal show><Call callType={this.props.callType}/></Modal>\n          <ChatScreen />\n        </React.Fragment>\n      );\n    } else {\n      chatScreen = <ChatScreen />\n    }\n      \n  }\n  if (this.props.endCall){\n      chatScreen = <ChatScreen />\n  }\n    return (\n        <div>\n          <Navbar />\n          <IncomingCall />\n          <div className=\"container\">\n\n         {chatScreen}\n         <audio src={ringtone} ref={ ring => this.ringtoneRef = ring } />\n          <Switch>\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            </Switch>\n          </div>\n        </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.auth.token !== null,\n    incomingCall: state.call.incomingCall,\n    callType: state.call.callType,\n    endCall: state.call.endCall\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: () => dispatch(actionCreators.checkAuthState())\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}