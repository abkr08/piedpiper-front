{"ast":null,"code":"import * as actionTypes from '../actions';\nimport axios from '../../../Axios';\n\nvar logIn = function logIn(token, userId) {\n  return {\n    type: actionTypes.LOG_IN,\n    token: token,\n    userId: userId\n  };\n};\n\nexport var onLogIn = function onLogIn(data) {\n  return function (dispatch) {\n    axios.post(\"/login\", data).then(function (res) {\n      var userId = res.data.userId;\n      console.log(userId);\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"userId\", userId);\n      dispatch(logIn(res.data.token, userId));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\n\nvar logout = function logout() {\n  return {\n    type: actionTypes.LOG_OUT\n  };\n};\n\nexport var onLogout = function onLogout() {\n  return function (dispatch) {\n    //delete token saved in local storage\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    dispatch(logout());\n  };\n};\n\nvar auth = function auth(token, userId) {\n  return {\n    type: actionTypes.ON_AUTH,\n    token: token,\n    userId: userId\n  };\n};\n\nexport var onAuth = function onAuth() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n    var userId = localStorage.getItem('userId');\n\n    if (token) {\n      dispatch(auth(token, userId));\n    }\n  };\n};\n\nvar registered = function registered() {\n  return {\n    type: actionTypes.ON_REGISTER\n  };\n};\n\nvar registrationFailed = function registrationFailed(err) {\n  return {\n    type: actionTypes.ON_REGISTRATION_FAILED,\n    error: err\n  };\n};\n\nexport var onRegister = function onRegister(data) {\n  return function (dispatch) {\n    axios.post(\"/register\", data).then(function (res) {\n      dispatch(registered());\n    }).catch(function (err) {\n      dispatch(registrationFailed());\n    });\n  };\n};","map":{"version":3,"sources":["/Users/gotzil/Downloads/social-media/client/src/store/actions/actionCreators/authActionCreators.js"],"names":["actionTypes","axios","logIn","token","userId","type","LOG_IN","onLogIn","data","dispatch","post","then","res","console","log","localStorage","setItem","catch","err","logout","LOG_OUT","onLogout","removeItem","auth","ON_AUTH","onAuth","getItem","registered","ON_REGISTER","registrationFailed","ON_REGISTRATION_FAILED","error","onRegister"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions';\nimport axios from '../../../Axios';\n\nconst logIn = (token, userId) => {\n    return {\n        type: actionTypes.LOG_IN,\n        token: token, \n        userId: userId\n    }\n}\nexport const onLogIn = (data) => {\n    return dispatch => {\n        axios.post(\"/login\", data)\n         .then(res => {\n           const { userId } = res.data;\n           console.log(userId);\n           localStorage.setItem(\"token\", res.data.token);\n           localStorage.setItem(\"userId\", userId);\n           dispatch(logIn(res.data.token, userId));\n         })\n         .catch(err => console.log(err))\n    }\n}\nconst logout = () => {\n    return {\n        type: actionTypes.LOG_OUT\n    }\n}\n\nexport const onLogout = () => {\n    return dispatch => {\n        //delete token saved in local storage\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userId\");\n        dispatch(logout());\n    }\n}\n\nconst auth = (token, userId) => {\n    return {\n        type: actionTypes.ON_AUTH,\n        token: token,\n        userId: userId\n    }\n}\nexport const onAuth = () => {\n    return dispatch => {\n        let token = localStorage.getItem('token');\n        let userId= localStorage.getItem('userId');\n        if(token){\n            dispatch(auth(token, userId));\n        }\n    }\n}\nconst registered = () => {\n    return {\n        type: actionTypes.ON_REGISTER,\n        \n    }\n}\nconst registrationFailed = err => {\n    return {\n        type: actionTypes.ON_REGISTRATION_FAILED,\n        error: err\n    }\n}\nexport const onRegister = data => {\n    return dispatch => {\n        axios.post(\"/register\", data)\n            .then(res => {\n                dispatch(registered())\n            })\n            .catch(err => {\n                dispatch(registrationFailed())\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}