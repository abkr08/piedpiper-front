{"ast":null,"code":"import _toConsumableArray from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actions';\nvar initialState = {\n  currentUser: {},\n  contacts: [],\n  currentRoom: null,\n  messages: [],\n  unopenedMessages: {}\n};\n\nvar chatReducer = function chatReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.CHAT_INIT_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: action.currentUser\n      });\n\n    case actionTypes.FETCH_MESSAGES_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          messages: action.messages,\n          currentRoom: action.room\n        });\n      }\n\n    case actionTypes.ON_NEW_MESSAGE:\n      if (action.belongsToCurrentRoom) {\n        return _objectSpread({}, state, {\n          messages: [].concat(_toConsumableArray(state.messages), [action.message])\n        });\n      } else {\n        var unopenedMessagesCopy = _objectSpread({}, state.unopenedMessages);\n\n        if (unopenedMessagesCopy.hasOwnProperty(action.message.roomId)) {\n          unopenedMessagesCopy[action.message.roomId].push(action.message);\n        } else {\n          unopenedMessagesCopy[action.message.roomId] = [action.message];\n        }\n\n        return _objectSpread({}, state, {\n          unopenedMessages: unopenedMessagesCopy\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default chatReducer;","map":{"version":3,"sources":["/Users/gotzil/Desktop/Pied Piper Chat/client/src/store/reducers/chatReducer.js"],"names":["actionTypes","initialState","currentUser","contacts","currentRoom","messages","unopenedMessages","chatReducer","state","action","type","CHAT_INIT_SUCCESS","FETCH_MESSAGES_SUCCESS","room","ON_NEW_MESSAGE","belongsToCurrentRoom","message","unopenedMessagesCopy","hasOwnProperty","roomId","push"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,oBAA7B;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,WAAW,EAAE,IAHI;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,gBAAgB,EAAE;AALD,CAArB;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,WAAW,CAACW,iBAAjB;AACI,+BACOH,KADP;AACcN,QAAAA,WAAW,EAAEO,MAAM,CAACP;AADlC;;AAGJ,SAAKF,WAAW,CAACY,sBAAjB;AAAyC;AACrC,iCACOJ,KADP;AACcH,UAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAD/B;AACyCD,UAAAA,WAAW,EAAEK,MAAM,CAACI;AAD7D;AAGH;;AACD,SAAKb,WAAW,CAACc,cAAjB;AACI,UAAIL,MAAM,CAACM,oBAAX,EAAgC;AAC5B,iCACOP,KADP;AACcH,UAAAA,QAAQ,+BAAMG,KAAK,CAACH,QAAZ,IAAsBI,MAAM,CAACO,OAA7B;AADtB;AAGH,OAJD,MAIO;AACH,YAAIC,oBAAoB,qBAAOT,KAAK,CAACF,gBAAb,CAAxB;;AACA,YAAIW,oBAAoB,CAACC,cAArB,CAAoCT,MAAM,CAACO,OAAP,CAAeG,MAAnD,CAAJ,EAA+D;AAC3DF,UAAAA,oBAAoB,CAACR,MAAM,CAACO,OAAP,CAAeG,MAAhB,CAApB,CAA4CC,IAA5C,CAAiDX,MAAM,CAACO,OAAxD;AACH,SAFD,MAEO;AACHC,UAAAA,oBAAoB,CAACR,MAAM,CAACO,OAAP,CAAeG,MAAhB,CAApB,GAA8C,CAACV,MAAM,CAACO,OAAR,CAA9C;AACH;;AACD,iCACOR,KADP;AACcF,UAAAA,gBAAgB,EAAEW;AADhC;AAGH;;AAEL;AACI,aAAOT,KAAP;AA5BR;AA8BH,CA/BD;;AAiCA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from '../actions/actions';\n\n\nconst initialState = {\n    currentUser: {},\n    contacts: [],\n    currentRoom: null,\n    messages: [],\n    unopenedMessages: {}\n};\n\nconst chatReducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.CHAT_INIT_SUCCESS:\n            return {\n                ...state, currentUser: action.currentUser\n            }\n        case actionTypes.FETCH_MESSAGES_SUCCESS: {\n            return {\n                ...state, messages: action.messages, currentRoom: action.room\n            }\n        }\n        case actionTypes.ON_NEW_MESSAGE: \n            if (action.belongsToCurrentRoom){\n                return {\n                    ...state, messages: [...state.messages, action.message]\n                }\n            } else {\n                let unopenedMessagesCopy = {...state.unopenedMessages};\n                if (unopenedMessagesCopy.hasOwnProperty(action.message.roomId)){\n                    unopenedMessagesCopy[action.message.roomId].push(action.message);\n                } else {\n                    unopenedMessagesCopy[action.message.roomId] = [action.message];\n                }\n                return { \n                    ...state, unopenedMessages: unopenedMessagesCopy\n               }  \n            }\n           \n        default: \n            return state;\n    }\n}\n\nexport default chatReducer;"]},"metadata":{},"sourceType":"module"}