{"ast":null,"code":"import _classCallCheck from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gotzil/Desktop/Pied Piper Chat/client/src/containers/PiperChat/Contact.js\";\nimport React, { Component } from 'react';\nimport classes from './Contact.module.css';\nimport img from '../../images/p37605.png';\nimport { connect } from 'react-redux';\nimport OptionsDropbar from '../../components/UI/OptionsDropbar/OptionsDropbar';\n\nvar Contact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contact, _Component);\n\n  function Contact() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Contact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Contact)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showOptions: false,\n      position: {}\n    };\n\n    _this.showOptions = function (event) {\n      var pos = {};\n      pos.x = event.clientX + 200;\n      pos.y = event.clientY;\n\n      _this.setState({\n        position: pos,\n        showOptions: true\n      });\n    };\n\n    _this.hideOptions = function () {\n      _this.setState({\n        showOptions: false,\n        position: {}\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Contact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.room, this.props.userId);\n      var contactName = this.props.room.userIds.filter(function (name) {\n        return console.log(name, _this2.props.userId);\n      });\n      var attachedClasses = [classes.Contact];\n      var unreadMessages = \"\";\n\n      if (this.props.Active) {\n        attachedClasses.push(classes.Active);\n      }\n\n      if (this.props.unopenedMessages[this.props.id]) {\n        unreadMessages = this.props.unopenedMessages[this.props.id].length;\n      }\n\n      return React.createElement(\"div\", {\n        className: attachedClasses.join(' '),\n        onClick: this.props.clicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: img,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.room.isPrivate ? contactName : this.props.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.lastMessage)), React.createElement(\"div\", {\n        className: classes.FloatedRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, unreadMessages), React.createElement(\"i\", {\n        onClick: this.showOptions,\n        className: \"fa fa-angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), this.state.showOptions && React.createElement(OptionsDropbar, {\n        position: this.state.position // optionClicked={(event, option) => this.optionClicked(option)}\n        ,\n        roomId: this.props.id,\n        show: this.state.showOptions,\n        hideOptions: this.hideOptions,\n        options: [{\n          name: 'Archive chat'\n        }, {\n          name: 'Mute'\n        }, {\n          name: this.props.isGroup ? 'Exit group' : 'Delete chat'\n        }, {\n          name: 'Pin chat'\n        }, {\n          name: 'Mark as unread'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Contact;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps)(Contact);","map":{"version":3,"sources":["/Users/gotzil/Desktop/Pied Piper Chat/client/src/containers/PiperChat/Contact.js"],"names":["React","Component","classes","img","connect","OptionsDropbar","Contact","state","showOptions","position","event","pos","x","clientX","y","clientY","setState","hideOptions","console","log","props","room","userId","contactName","userIds","filter","name","attachedClasses","unreadMessages","Active","push","unopenedMessages","id","length","join","clicked","isPrivate","lastMessage","FloatedRight","isGroup","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './Contact.module.css';\nimport img from '../../images/p37605.png'\nimport { connect } from 'react-redux';\nimport OptionsDropbar from '../../components/UI/OptionsDropbar/OptionsDropbar'\n\nclass Contact extends Component {\n    state = {\n        showOptions: false,\n        position: {}\n    }\n    showOptions = event => {\n        let pos = {};\n        pos.x = event.clientX + 200;\n        pos.y = event.clientY;\n        this.setState({position: pos, showOptions: true})\n    }\n    hideOptions = () => {\n        this.setState({showOptions: false, position: {}})\n    }\n   \n    render(){\n        console.log(this.props.room, this.props.userId)\n        const contactName = this.props.room.userIds.filter(name => console.log(name, this.props.userId));\n        let attachedClasses = [classes.Contact];\n        let unreadMessages = \"\";\n        if (this.props.Active){\n            attachedClasses.push(classes.Active); \n        }\n        if (this.props.unopenedMessages[this.props.id]){\n            unreadMessages = this.props.unopenedMessages[this.props.id].length;\n        }\n        return (\n            <div className={attachedClasses.join(' ')} onClick={this.props.clicked}>\n                <img src={img} alt=''/>\n                <div>\n                    <p>{this.props.room.isPrivate ? contactName : this.props.name}</p>\n                    <p>{this.props.lastMessage}</p>\n                </div>\n                <div className={classes.FloatedRight}>\n                    <span>{unreadMessages}</span>\n                    <i onClick={this.showOptions} className=\"fa fa-angle-down\"></i>\n                    { this.state.showOptions && \n                        <OptionsDropbar position={this.state.position} \n                                // optionClicked={(event, option) => this.optionClicked(option)}\n                                roomId={this.props.id}\n                                show={this.state.showOptions} \n                                hideOptions={this.hideOptions}\n                                options={[{name: 'Archive chat'},\n                                {name: 'Mute'},\n                                {name: this.props.isGroup? 'Exit group':'Delete chat'},\n                                {name: 'Pin chat'},\n                                {name: 'Mark as unread'}\n                                ]}/>}\n                </div>\n            </div>\n    )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        userId: state.auth.userId\n    }\n}\nexport default connect(mapStateToProps)(Contact);"]},"metadata":{},"sourceType":"module"}