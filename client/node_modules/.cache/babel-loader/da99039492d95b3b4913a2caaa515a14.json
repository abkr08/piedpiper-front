{"ast":null,"code":"import _classCallCheck from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/src/containers/Call/Call.js\";\nimport React, { Component } from 'react';\nimport classes from './Call.module.css';\nimport { connect } from 'react-redux';\nimport * as callActionCreators from '../../store/actions/actionIndex';\nimport Button from '../../components/UI/Button/Button';\n\nvar Call =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Call, _Component);\n\n  function Call() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Call);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Call)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      id: null,\n      room: null\n    };\n\n    _this.endCall = function () {\n      _this.setState({\n        room: null\n      });\n\n      _this.props.endCall();\n    };\n\n    _this.endCurrentCall = function () {\n      _this.props.channel.trigger(\"client-endcall\", {\n        room: _this.state.room\n      });\n\n      _this.endCall();\n\n      _this.props.closeCall();\n    };\n\n    return _this;\n  }\n\n  _createClass(Call, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.role === 'callee') {\n        this.setState({\n          room: this.props.caller\n        });\n      } else {\n        this.props.callUser(this.props.callTo, this.props.callType);\n        this.setState({\n          room: this.props.callTo\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.callType === 'video') {\n        this.localVideoRef.srcObject = this.props.localStream;\n        this.remoteVideoRef.srcObject = this.props.remoteStream;\n      } else {\n        this.localAudioRef.srcObject = this.props.localStream;\n        this.remoteAudioRef.srcObject = this.props.remoteStream;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var call = null;\n\n      if (this.props.callType === 'video') {\n        call = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.videoContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"video\", {\n          className: classes.LocalVideo,\n          autoPlay: true,\n          muted: true,\n          ref: function ref(lVid) {\n            return _this2.localVideoRef = lVid;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }), React.createElement(\"video\", {\n          className: classes.RemoteVideo,\n          autoPlay: true,\n          ref: function ref(rVid) {\n            return _this2.remoteVideoRef = rVid;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        })));\n      } else {\n        call = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"audio\", {\n          autoPlay: true,\n          src: this.props.localStream,\n          muted: true,\n          ref: function ref(audio) {\n            return _this2.localAudioRef = audio;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(\"audio\", {\n          autoPlay: true,\n          src: this.props.remoteStream,\n          ref: function ref(audio) {\n            return _this2.remoteAudioRef = audio;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.Call,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, call, React.createElement(\"div\", {\n        className: classes.Buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Button, {\n        clicked: this.endCall,\n        btnType: \"Danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"End Call\")));\n    }\n  }]);\n\n  return Call;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userId: state.auth.userId,\n    channel: state.call.channel,\n    remoteStream: state.call.remoteStream,\n    localStream: state.call.localStream,\n    incomingCall: state.call.incomingCall,\n    caller: state.call.caller\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    callUser: function callUser(user, callType) {\n      return dispatch(callActionCreators.callUser(user, callType));\n    },\n    endCall: function endCall() {\n      return dispatch(callActionCreators.endCall());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Call);","map":{"version":3,"sources":["/Users/Gotzil/Desktop/React/PiperChat/piedpiper/client/src/containers/Call/Call.js"],"names":["React","Component","classes","connect","callActionCreators","Button","Call","state","id","room","endCall","setState","props","endCurrentCall","channel","trigger","closeCall","role","caller","callUser","callTo","callType","localVideoRef","srcObject","localStream","remoteVideoRef","remoteStream","localAudioRef","remoteAudioRef","call","videoContainer","LocalVideo","lVid","RemoteVideo","rVid","audio","Buttons","mapStateToProps","userId","auth","incomingCall","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport classes from './Call.module.css';\nimport { connect } from 'react-redux';\nimport * as callActionCreators from '../../store/actions/actionIndex'\n\nimport Button from '../../components/UI/Button/Button';\n\nclass Call extends Component {\n    \n    state = {\n          id: null,\n          room: null\n    }\n       \n    componentDidMount (){\n        if (this.props.role === 'callee'){\n            this.setState({room: this.props.caller});\n        } else {\n            this.props.callUser(this.props.callTo, this.props.callType);\n            this.setState({room: this.props.callTo});\n        }\n    }\n       \n    \n    endCall = () => {\n        this.setState({room: null});\n        this.props.endCall();\n    }\n    \n    endCurrentCall = () => {\n        this.props.channel.trigger(\"client-endcall\", {\n            room: this.state.room\n        });\n        this.endCall();\n        this.props.closeCall();\n    }\n    \n    \n    componentDidUpdate () {\n        if (this.props.callType === 'video'){\n            this.localVideoRef.srcObject = this.props.localStream;\n            this.remoteVideoRef.srcObject = this.props.remoteStream;\n        } else {\n            this.localAudioRef.srcObject = this.props.localStream;\n            this.remoteAudioRef.srcObject = this.props.remoteStream;\n        }\n    }\n       \n    render () {\n        let call = null;\n        if (this.props.callType === 'video'){\n            call = (\n                <React.Fragment>\n                    <div className={classes.videoContainer}>\n                        <video className={classes.LocalVideo} autoPlay muted  \n                            ref={(lVid)=> this.localVideoRef = lVid}>\n                        </video>\n\n                        <video className={classes.RemoteVideo} autoPlay  \n                        ref={(rVid)=> this.remoteVideoRef = rVid}>\n                        </video>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            call = (\n                <React.Fragment>\n                    <audio autoPlay src={this.props.localStream} muted ref={audio => this.localAudioRef = audio} />\n                    <audio autoPlay src={this.props.remoteStream} ref={audio => this.remoteAudioRef = audio} />\n                </React.Fragment>\n            )\n        }\n        return (\n            <div className={classes.Call}>\n                {call}\n                <div className={classes.Buttons}>\n                    {/* <span style={{color: 'red'}}><i class=\"fas fa-window-close\"></i></span> */}\n                    <Button clicked={this.endCall} btnType='Danger'>End Call</Button>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        userId: state.auth.userId,\n        channel: state.call.channel,\n        remoteStream: state.call.remoteStream,\n        localStream: state.call.localStream,\n        incomingCall: state.call.incomingCall,\n        caller: state.call.caller\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        callUser: (user, callType) => dispatch(callActionCreators.callUser(user, callType)),\n        endCall: () => dispatch(callActionCreators.endCall())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Call);"]},"metadata":{},"sourceType":"module"}