{"ast":null,"code":"var _this = this;\n\nimport pusher from '../../../pusherConfig';\nvar channel = pusher.subscribe('presence-videocall');\nexport var getCallerReady = function getCallerReady(room) {\n  return function (dispatch) {\n    var caller = new window.RTCPeerConnection({\n      'iceServers': [{\n        'urls': 'stun:stun.l.google.com:19302'\n      }]\n    }); //Listen for ICE Candidates and send them to remote peers\n\n    caller.onicecandidate = function (evt) {\n      if (!evt.candidate) return;\n      console.log(\"onicecandidate called\");\n      console.log(evt);\n      onIceCandidate(caller, evt);\n    }; //onaddstream handler to receive remote feed and show in remoteview video element\n\n\n    caller.ontrack = function (evt) {\n      console.log(evt);\n      _this.remoteVideoRef.srcObject = evt.stream;\n    };\n  };\n};\n\nonIceCandidate = function onIceCandidate(peer, evt) {\n  if (evt.candidate) {\n    channel.trigger(\"client-candidate\", {\n      candidate: evt.candidate,\n      room: _this.state.room\n    });\n  }\n};","map":{"version":3,"sources":["/Users/gotzil/Downloads/social-media/client/src/store/actions/actionCreators/callActionCreators.js"],"names":["pusher","channel","subscribe","getCallerReady","room","dispatch","caller","window","RTCPeerConnection","onicecandidate","evt","candidate","console","log","onIceCandidate","ontrack","remoteVideoRef","srcObject","stream","peer","trigger","state"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AAEA,IAAMC,OAAO,GAAGD,MAAM,CAACE,SAAP,CAAiB,oBAAjB,CAAhB;AAGA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI,EAAI;AAClC,SAAO,UAAAC,QAAQ,EAAI;AAClB,QAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,iBAAX,CAA6B;AAAC,oBAAa,CAAC;AAAC,gBAAO;AAAR,OAAD;AAAd,KAA7B,CAAf,CADkB,CAGnB;;AACAF,IAAAA,MAAM,CAACG,cAAP,GAAwB,UAAAC,GAAG,EAAI;AAC7B,UAAI,CAACA,GAAG,CAACC,SAAT,EAAoB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAI,MAAAA,cAAc,CAACR,MAAD,EAASI,GAAT,CAAd;AACD,KALD,CAJmB,CAUnB;;;AACAJ,IAAAA,MAAM,CAACS,OAAP,GAAiB,UAAAL,GAAG,EAAI;AACtBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACJ,MAAA,KAAI,CAACM,cAAL,CAAoBC,SAApB,GAAgCP,GAAG,CAACQ,MAApC;AACG,KAHD;AAIC,GAfD;AAgBH,CAjBM;;AAmBPJ,cAAc,GAAG,wBAACK,IAAD,EAAOT,GAAP,EAAe;AAC5B,MAAIA,GAAG,CAACC,SAAR,EAAmB;AACjBV,IAAAA,OAAO,CAACmB,OAAR,CAAgB,kBAAhB,EAAoC;AAClCT,MAAAA,SAAS,EAAED,GAAG,CAACC,SADmB;AAElCP,MAAAA,IAAI,EAAE,KAAI,CAACiB,KAAL,CAAWjB;AAFiB,KAApC;AAID;AACF,CAPH","sourcesContent":["import pusher from '../../../pusherConfig';\n\nconst channel = pusher.subscribe('presence-videocall');\n\n\nexport const getCallerReady = room => {\n    return dispatch => {\n     const caller = new window.RTCPeerConnection({'iceServers':[{'urls':'stun:stun.l.google.com:19302'}]});\n\n    //Listen for ICE Candidates and send them to remote peers\n    caller.onicecandidate = evt => {\n      if (!evt.candidate) return;\n      console.log(\"onicecandidate called\");\n      console.log(evt);\n      onIceCandidate(caller, evt);\n    };\n    //onaddstream handler to receive remote feed and show in remoteview video element\n    caller.ontrack = evt => {\n      console.log(evt);\n  this.remoteVideoRef.srcObject = evt.stream;\n    };\n    }\n}\n\nonIceCandidate = (peer, evt) => {\n    if (evt.candidate) {\n      channel.trigger(\"client-candidate\", {\n        candidate: evt.candidate,\n        room: this.state.room\n      });\n    }\n  }"]},"metadata":{},"sourceType":"module"}