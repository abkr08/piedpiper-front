{"ast":null,"code":"import _classCallCheck from \"/Users/gotzil/Downloads/social-media/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gotzil/Downloads/social-media/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gotzil/Downloads/social-media/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gotzil/Downloads/social-media/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gotzil/Downloads/social-media/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gotzil/Downloads/social-media/client/src/containers/Video/Video.js\";\nimport React, { Component } from 'react';\nimport classes from './Video.module.css';\nimport pusher from '../../pusherConfig';\n\nvar Video =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Video, _Component);\n\n  function Video() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Video)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.gotLocalStream = function (mediaStream) {\n      _this.localStream = mediaStream;\n      _this.localVideoRef.srcObject = mediaStream;\n    };\n\n    _this.GetRTCIceCandidate = function () {\n      _this.RTCIceCandidate = _this.RTCIceCandidate || _this.webkitRTCIceCandidate || _this.mozRTCIceCandidate || _this.msRTCIceCandidate;\n      return _this.RTCIceCandidate;\n    };\n\n    _this.GetRTCPeerConnection = function () {\n      _this.RTCPeerConnection = _this.RTCPeerConnection || _this.webkitRTCPeerConnection || _this.mozRTCPeerConnection || _this.msRTCPeerConnection;\n      return _this.RTCPeerConnection;\n    };\n\n    _this.GetRTCSessionDescription = function () {\n      _this.RTCSessionDescription = _this.RTCSessionDescription || _this.webkitRTCSessionDescription || _this.mozRTCSessionDescription || _this.msRTCSessionDescription;\n      return _this.RTCSessionDescription;\n    };\n\n    _this.prepareCaller = function () {\n      //Initializing a peer connection\n      caller = new _this.RTCPeerConnection(); //Listen for ICE Candidates and send them to remote peers\n\n      caller.onicecandidate = function (evt) {\n        if (!evt.candidate) return;\n        console.log(\"onicecandidate called\");\n        onIceCandidate(caller, evt);\n      }; //onaddstream handler to receive remote feed and show in remoteview video element\n\n\n      caller.onaddstream = function (evt) {\n        console.log(\"onaddstream called\");\n\n        if (_this.URL) {\n          _this.remoteVideoRef.srcObject = _this.URL.createObjectURL(evt.stream);\n        } else {\n          _this.remoteVideoRef.srcObject = evt.stream;\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //const channel = pusher.subscribe('presence-videocall');\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(this.gotLocalStream).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: classes.Video,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        autoPlay: true,\n        ref: function ref(lVid) {\n          return _this2.localVideoRef = lVid;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"video\", {\n        autoPlay: true,\n        ref: function ref(rVid) {\n          return _this2.remoteVideoRef = rVid;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nexport default Video;","map":{"version":3,"sources":["/Users/gotzil/Downloads/social-media/client/src/containers/Video/Video.js"],"names":["React","Component","classes","pusher","Video","gotLocalStream","mediaStream","localStream","localVideoRef","srcObject","GetRTCIceCandidate","RTCIceCandidate","webkitRTCIceCandidate","mozRTCIceCandidate","msRTCIceCandidate","GetRTCPeerConnection","RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","msRTCPeerConnection","GetRTCSessionDescription","RTCSessionDescription","webkitRTCSessionDescription","mozRTCSessionDescription","msRTCSessionDescription","prepareCaller","caller","onicecandidate","evt","candidate","console","log","onIceCandidate","onaddstream","URL","remoteVideoRef","createObjectURL","stream","navigator","mediaDevices","getUserMedia","video","then","catch","err","lVid","rVid"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;IACMC,K;;;;;;;;;;;;;;;;;;UAWFC,c,GAAiB,UAAAC,WAAW,EAAI;AAC5B,YAAKC,WAAL,GAAmBD,WAAnB;AACA,YAAKE,aAAL,CAAmBC,SAAnB,GAA+BH,WAA/B;AACH,K;;UAEAI,kB,GAAqB,YAAM;AACxB,YAAKC,eAAL,GACE,MAAKA,eAAL,IACA,MAAKC,qBADL,IAEA,MAAKC,kBAFL,IAGA,MAAKC,iBAJP;AAMA,aAAO,MAAKH,eAAZ;AACD,K;;UAEAI,oB,GAAuB,YAAM;AAC5B,YAAKC,iBAAL,GACE,MAAKA,iBAAL,IACA,MAAKC,uBADL,IAEA,MAAKC,oBAFL,IAGA,MAAKC,mBAJP;AAKA,aAAO,MAAKH,iBAAZ;AACD,K;;UAEAI,wB,GAA2B,YAAM;AAChC,YAAKC,qBAAL,GACE,MAAKA,qBAAL,IACA,MAAKC,2BADL,IAEA,MAAKC,wBAFL,IAGA,MAAKC,uBAJP;AAKA,aAAO,MAAKH,qBAAZ;AACD,K;;UACAI,a,GAAgB,YAAM;AACrB;AACAC,MAAAA,MAAM,GAAG,IAAI,MAAKV,iBAAT,EAAT,CAFqB,CAGrB;;AACAU,MAAAA,MAAM,CAACC,cAAP,GAAwB,UAACC,GAAD,EAAS;AAC/B,YAAI,CAACA,GAAG,CAACC,SAAT,EAAoB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAC,QAAAA,cAAc,CAACN,MAAD,EAASE,GAAT,CAAd;AACD,OAJD,CAJqB,CASrB;;;AACAF,MAAAA,MAAM,CAACO,WAAP,GAAqB,UAACL,GAAD,EAAS;AAC5BE,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,YAAI,MAAKG,GAAT,EAAc;AACZ,gBAAKC,cAAL,CAAoB1B,SAApB,GAAgC,MAAKyB,GAAL,CAASE,eAAT,CAC9BR,GAAG,CAACS,MAD0B,CAAhC;AAGD,SAJD,MAIO;AACL,gBAAKF,cAAL,CAAoB1B,SAApB,GAAgCmB,GAAG,CAACS,MAApC;AACD;AACF,OATD;AAUD,K;;;;;;;wCA7DkB;AACjB;AACIC,MAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAChCC,QAAAA,KAAK,EAAE;AADyB,OAApC,EAGCC,IAHD,CAGM,KAAKrC,cAHX,EAICsC,KAJD,CAIO,UAAAC,GAAG;AAAA,eAAId,OAAO,CAACC,GAAR,CAAYa,GAAZ,CAAJ;AAAA,OAJV;AAKP;;;6BAuDS;AAAA;;AACN,aACI;AAAK,QAAA,SAAS,EAAE1C,OAAO,CAACE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,GAAG,EAAE,aAACyC,IAAD;AAAA,iBAAS,MAAI,CAACrC,aAAL,GAAqBqC,IAA9B;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,GAAG,EAAE,aAACC,IAAD;AAAA,iBAAS,MAAI,CAACX,cAAL,GAAsBW,IAA/B;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAvEe7C,S;;AA0EpB,eAAeG,KAAf","sourcesContent":["import React, { Component} from 'react';\nimport classes from './Video.module.css';\nimport pusher from '../../pusherConfig'; \nclass Video extends Component {\n    \n    componentDidMount () {\n        //const channel = pusher.subscribe('presence-videocall');\n            navigator.mediaDevices.getUserMedia({\n                video: true\n            })\n            .then(this.gotLocalStream)\n            .catch(err => console.log(err));\n    }\n\n    gotLocalStream = mediaStream => {\n        this.localStream = mediaStream;\n        this.localVideoRef.srcObject = mediaStream;\n    }\n\n     GetRTCIceCandidate = () => {\n        this.RTCIceCandidate =\n          this.RTCIceCandidate ||\n          this.webkitRTCIceCandidate ||\n          this.mozRTCIceCandidate ||\n          this.msRTCIceCandidate;\n  \n        return this.RTCIceCandidate;\n      }\n  \n       GetRTCPeerConnection = () => {\n        this.RTCPeerConnection =\n          this.RTCPeerConnection ||\n          this.webkitRTCPeerConnection ||\n          this.mozRTCPeerConnection ||\n          this.msRTCPeerConnection;\n        return this.RTCPeerConnection;\n      }\n  \n       GetRTCSessionDescription = () => {\n        this.RTCSessionDescription =\n          this.RTCSessionDescription ||\n          this.webkitRTCSessionDescription ||\n          this.mozRTCSessionDescription ||\n          this.msRTCSessionDescription;\n        return this.RTCSessionDescription;\n      }\n       prepareCaller = () => {\n        //Initializing a peer connection\n        caller = new this.RTCPeerConnection();\n        //Listen for ICE Candidates and send them to remote peers\n        caller.onicecandidate = (evt) => {\n          if (!evt.candidate) return;\n          console.log(\"onicecandidate called\");\n          onIceCandidate(caller, evt);\n        };\n        //onaddstream handler to receive remote feed and show in remoteview video element\n        caller.onaddstream = (evt) => {\n          console.log(\"onaddstream called\");\n          if (this.URL) {\n            this.remoteVideoRef.srcObject = this.URL.createObjectURL(\n              evt.stream\n            );\n          } else {\n            this.remoteVideoRef.srcObject = evt.stream;\n          }\n        };\n      }\n    render () {\n        return (\n            <div className={classes.Video}>\n                <video autoPlay ref={(lVid)=> this.localVideoRef = lVid}  ></video>\n                <video autoPlay ref={(rVid)=> this.remoteVideoRef = rVid}  ></video>\n            </div>\n        )\n    }\n}\n\nexport default Video;"]},"metadata":{},"sourceType":"module"}