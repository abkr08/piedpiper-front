{"ast":null,"code":"import _objectSpread from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gotzil/Desktop/Pied Piper Chat/client/src/components/Auth/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../../store/actions/actionIndex';\nimport classes from './Login.module.css';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      controls: {\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            placeholder: 'Enter your email',\n            type: 'email'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            placeholder: 'Enter your password',\n            type: 'password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 8\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      formIsValid: false\n    };\n\n    _this.onChange = function (e) {\n      var _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      var data = _objectSpread({}, _this.state);\n\n      _this.props.onLogIn(data);\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var redirect = null;\n\n      if (this.props.isLoggedIn) {\n        redirect = React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n      }\n\n      var formElements = [];\n\n      for (key in this.state.controls) {\n        formElements.push({\n          id: key,\n          config: this.state.controls[key]\n        });\n      }\n\n      var form = formElements.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          shouldValidate: formElement.config.validation,\n          touched: formElement.config.touched,\n          changed: function changed(event) {\n            return _this2.onChange(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: classes.registerBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, redirect, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" Login \"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        required: \"{true}\",\n        value: this.state.email,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \" Email \")), React.createElement(\"div\", {\n        className: classes.inputBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        required: \"{true}\",\n        value: this.state.password,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" Password \")), React.createElement(\"input\", {\n        type: \"submit\",\n        name: \"\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: state.auth.token !== null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onLogIn: function onLogIn(data) {\n      return dispatch(actionCreators.onLogIn(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/gotzil/Desktop/Pied Piper Chat/client/src/components/Auth/Login/Login.js"],"names":["React","Component","Redirect","connect","actionCreators","classes","Input","Button","Login","state","controls","email","elementType","elementConfig","placeholder","type","value","validation","required","isEmail","valid","touched","password","minLength","formIsValid","onChange","e","target","name","setState","onSubmit","preventDefault","data","props","onLogIn","redirect","isLoggedIn","formElements","key","push","id","config","form","map","formElement","event","registerBox","inputBox","mapStateToProps","auth","token","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Redirect} from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../../store/actions/actionIndex';\r\nimport classes from './Login.module.css'; \r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button'; \r\n\r\nclass Login extends Component {\r\n\r\n  state = {\r\n      controls: {\r\n        email: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n              placeholder: 'Enter your email',\r\n              type: 'email'\r\n          },\r\n          value: '',\r\n          validation: {\r\n              required: true,\r\n              isEmail: true\r\n          },\r\n          valid: false,\r\n          touched: false\r\n      },\r\n      password: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n            placeholder: 'Enter your password',\r\n            type: 'password'\r\n        }, \r\n        value: '',\r\n        validation: {\r\n            required: true,\r\n            minLength: 8\r\n        },\r\n        valid: false,\r\n        touched: false\r\n    }\r\n      },\r\n      formIsValid: false\r\n  }\r\n\r\n  onChange = e => {\r\n    const { value, name } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {...this.state}\r\n    this.props.onLogIn(data);\r\n  };\r\n  render() {\r\n    let redirect = null;\r\n    if (this.props.isLoggedIn){\r\n      redirect = <Redirect to=\"/\"/>;\r\n    }\r\n    let formElements = [];\r\n    for (key in this.state.controls){\r\n      formElements.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n    const form = formElements.map(formElement => {\r\n      return <Input \r\n                key={formElement.id} elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={ event => this.onChange(event, formElement.id)}\r\n            />\r\n    })\r\n    return (\r\n      <div className={classes.registerBox}>\r\n      {redirect}\r\n        <h2> Login </h2>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"inputBox\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              required=\"{true}\"\r\n              value={this.state.email}\r\n              onChange={this.onChange}\r\n            />\r\n            <label> Email </label>\r\n          </div>\r\n          <div className={classes.inputBox}>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              required=\"{true}\"\r\n              value={this.state.password}\r\n              onChange={this.onChange}\r\n            />\r\n            <label> Password </label>\r\n          </div>\r\n          <input type=\"submit\" name=\"\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.auth.token !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogIn: (data) => dispatch(actionCreators.onLogIn(data))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}