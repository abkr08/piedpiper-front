{"ast":null,"code":"import _objectSpread from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gotzil/Desktop/Pied Piper Chat/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gotzil/Desktop/Pied Piper Chat/client/src/components/UI/SideDrawer/SideDrawer.js\";\nimport React, { Component } from 'react';\nimport classes from './SideDrawer.module.css';\nimport axios from '../../../Axios';\nimport { connect } from 'react-redux';\nimport JoinableRooms from './JoinableRooms/JoinableRooms';\nimport * as actionCreators from '../../../store/actions/actionIndex';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\n\nvar SideDrawer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SideDrawer, _Component);\n\n  function SideDrawer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SideDrawer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SideDrawer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showCreateForm: false,\n      showNewChatForm: false,\n      groupName: '',\n      participants: [],\n      potentialParticipants: [],\n      newGroupChatParticipants: {},\n      privateChatParticipant: '',\n      joinableRooms: [],\n      ShowJoinableRoomsList: false,\n      touched: false,\n      isValid: false\n    };\n\n    _this.createNewGroupHandler = function () {\n      var potentialParticipants = _this.props.user.rooms.filter(function (user) {\n        return user.isPrivate && user.name !== _this.props.userId;\n      });\n\n      var chatParticipants = {};\n      potentialParticipants.forEach(function (pp) {\n        return chatParticipants[pp.name] = false;\n      });\n\n      _this.setState(function (prevState) {\n        return {\n          showCreateForm: !prevState.showCreateForm,\n          potentialParticipants: potentialParticipants,\n          ShowJoinableRoomsList: false,\n          showNewChatForm: false,\n          newGroupChatParticipants: chatParticipants\n        };\n      });\n    };\n\n    _this.onChange = function (event, name) {\n      var _this$setState;\n\n      var valid = false;\n\n      if (_this.state[name] !== \"\") {\n        valid = true;\n      }\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, event.target.value), _defineProperty(_this$setState, \"isValid\", valid), _this$setState));\n    };\n\n    _this.onCreateNewGroup = function (event) {\n      event.preventDefault();\n\n      var obj = _objectSpread({}, _this.state.newGroupChatParticipants);\n\n      var participants = Object.keys(obj).filter(function (j) {\n        return obj[j];\n      });\n\n      _this.props.onCreateNewGroup({\n        participants: participants,\n        name: _this.state.groupName\n      });\n\n      _this.setState({\n        groupName: '',\n        newGroupChatParticipants: {}\n      });\n    };\n\n    _this.startNewChatHandler = function () {\n      _this.setState(function (prevState) {\n        return {\n          showNewChatForm: !prevState.showNewChatForm,\n          ShowJoinableRoomsList: false,\n          showCreateForm: false\n        };\n      });\n    };\n\n    _this.onStartNewChat = function (event) {\n      event.preventDefault();\n      axios.get(\"/search/\".concat(_this.state.privateChatParticipant), {\n        headers: {\n          'x-auth-token': _this.props.token\n        }\n      }).then(function (res) {\n        _this.props.user.createRoom({\n          name: _this.state.privateChatParticipant,\n          private: true,\n          addUserIds: [_this.state.privateChatParticipant],\n          customData: {\n            displayImage: res.data.avatar\n          }\n        }).then(function (res) {\n          return console.log(res);\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.joinGroup = function () {\n      _this.props.user.getJoinableRooms().then(function (rooms) {\n        console.log(rooms);\n\n        _this.setState(function (prevState) {\n          return {\n            joinableRooms: rooms,\n            ShowJoinableRoomsList: !prevState.ShowJoinableRoomsList,\n            showCreateForm: false,\n            showNewChatForm: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(\"Error getting joinable rooms: \".concat(err));\n      });\n    };\n\n    _this.onPPChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          checked = _event$target.checked;\n\n      var groupParticipants = _objectSpread({}, _this.state.newGroupChatParticipants);\n\n      groupParticipants[name] = checked;\n\n      _this.setState({\n        newGroupChatParticipants: groupParticipants\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SideDrawer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var attachedClasses = [classes.SideDrawer, classes.Close];\n\n      if (this.props.show) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n      }\n\n      return React.createElement(\"div\", {\n        className: attachedClasses.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.divs,\n        onClick: this.createNewGroupHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Create a new group\"), React.createElement(\"form\", {\n        onSubmit: this.onCreateNewGroup,\n        style: {\n          display: this.state.showCreateForm ? 'block' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Input, {\n        elementType: \"input\",\n        elementConfig: {\n          placeholder: 'Enter group name',\n          type: 'text'\n        },\n        value: this.state.groupName,\n        invalid: this.state.isTouched && !this.state.isValid,\n        shouldValidate: true,\n        touched: this.state.isTouched,\n        name: \"groupName\",\n        changed: function changed(event) {\n          return _this2.onChange(event, 'groupName');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Add participants\"), this.state.potentialParticipants.map(function (pp, i) {\n        return React.createElement(\"span\", {\n          key: i,\n          className: classes.PP,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          onChange: _this2.onPPChange,\n          type: \"checkbox\",\n          name: pp.name,\n          checked: _this2.state.newGroupChatParticipants[pp.name],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: pp.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, pp.name));\n      }), React.createElement(Button, {\n        disabled: !this.state.groupName && !Object.keys(this.state.newGroupChatParticipants).map(function (key) {\n          return _this2.state.newGroupChatParticipants[key];\n        }).includes(true),\n        btnType: \"Success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Create\")), React.createElement(\"div\", {\n        className: classes.divs,\n        onClick: this.joinGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Join a group\"), React.createElement(\"span\", {\n        style: {\n          display: this.state.ShowJoinableRoomsList ? 'block' : 'none'\n        },\n        className: classes.RoomsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(JoinableRooms, {\n        joinableRooms: this.state.joinableRooms,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.divs,\n        onClick: this.startNewChatHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Start a new chat\"), React.createElement(\"form\", {\n        onSubmit: this.onStartNewChat,\n        style: {\n          display: this.state.showNewChatForm ? 'block' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.onChange,\n        type: \"text\",\n        name: \"privateChatParticipant\",\n        placeholder: \"Who do you wanna chat with?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return SideDrawer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n\n  var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n      onCreateNewGroup: function onCreateNewGroup(data) {\n        return dispatch(actionCreators.createNewGroup(data));\n      },\n      onStartNewChat: function onStartNewChat(data) {\n        return dispatch(actionCreators.startNewChat(data));\n      },\n      joinGroup: function joinGroup() {\n        return dispatch(actionCreators.joinGroup());\n      }\n    };\n  };\n};\n\nexport default connect(mapStateToProps)(SideDrawer);","map":{"version":3,"sources":["/Users/gotzil/Desktop/Pied Piper Chat/client/src/components/UI/SideDrawer/SideDrawer.js"],"names":["React","Component","classes","axios","connect","JoinableRooms","actionCreators","Input","Button","SideDrawer","state","showCreateForm","showNewChatForm","groupName","participants","potentialParticipants","newGroupChatParticipants","privateChatParticipant","joinableRooms","ShowJoinableRoomsList","touched","isValid","createNewGroupHandler","props","user","rooms","filter","isPrivate","name","userId","chatParticipants","forEach","pp","setState","prevState","onChange","event","valid","target","value","onCreateNewGroup","preventDefault","obj","Object","keys","j","startNewChatHandler","onStartNewChat","get","headers","token","then","res","createRoom","private","addUserIds","customData","displayImage","data","avatar","console","log","catch","err","joinGroup","getJoinableRooms","onPPChange","checked","groupParticipants","attachedClasses","Close","show","Open","join","divs","display","placeholder","type","isTouched","map","i","PP","key","includes","RoomsList","mapStateToProps","auth","mapDispatchToProps","dispatch","createNewGroup","startNewChat"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; \nimport classes from './SideDrawer.module.css';\nimport axios from '../../../Axios';\nimport { connect } from 'react-redux';\nimport JoinableRooms from './JoinableRooms/JoinableRooms';  \nimport * as actionCreators from '../../../store/actions/actionIndex';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button'\n\n\nclass SideDrawer extends Component {\n        state = {\n            showCreateForm: false,\n            showNewChatForm: false,\n            groupName: '',\n            participants: [],\n            potentialParticipants: [],\n            newGroupChatParticipants: {},\n            privateChatParticipant: '',\n            joinableRooms: [],\n            ShowJoinableRoomsList: false,\n            touched: false,\n            isValid: false\n        }\n        createNewGroupHandler = () => {\n            let potentialParticipants = this.props.user.rooms.filter(user => user.isPrivate && user.name !== this.props.userId);\n            let chatParticipants = {};\n            potentialParticipants.forEach(pp => chatParticipants[pp.name] = false);\n            this.setState(prevState => {\n                return {\n                showCreateForm: !prevState.showCreateForm, \n                potentialParticipants, \n                ShowJoinableRoomsList: false,\n                showNewChatForm: false,\n                newGroupChatParticipants: chatParticipants \n             }\n            });\n            \n        }\n        onChange = (event, name) => {\n            let valid = false; \n            if (this.state[name] !== \"\"){\n                valid = true;\n            }\n            this.setState({[name]: event.target.value, isValid: valid});\n        }\n        onCreateNewGroup = event => {\n            event.preventDefault();\n            let obj = {...this.state.newGroupChatParticipants};\n            let participants = Object.keys(obj).filter(j => obj[j]);\n            this.props.onCreateNewGroup({participants, name: this.state.groupName});\n            this.setState({groupName: '', newGroupChatParticipants: {}});\n        }\n        startNewChatHandler = () => {\n            this.setState(prevState => {\n                return {\n                showNewChatForm: !prevState.showNewChatForm, \n                ShowJoinableRoomsList: false, \n                showCreateForm: false\n            }})\n            \n        }\n        onStartNewChat = event => {\n            event.preventDefault();\n            axios.get(`/search/${this.state.privateChatParticipant}`, {headers: {'x-auth-token': this.props.token}})\n            .then(res => {\n                this.props.user.createRoom({\n                name: this.state.privateChatParticipant,\n                private: true,\n                addUserIds: [this.state.privateChatParticipant],\n                customData: {displayImage: res.data.avatar}     \n            })\n                .then(res => console.log(res))\n                .catch(err => console.log(err));\n            })\n            .catch(err => console.log(err));\n        }\n        joinGroup = () => {\n            this.props.user.getJoinableRooms()\n            .then(rooms => {\n                console.log(rooms);\n              this.setState(prevState => {\n                  return {\n                  joinableRooms: rooms, \n                  ShowJoinableRoomsList: !prevState.ShowJoinableRoomsList,\n                  showCreateForm: false,\n                  showNewChatForm: false\n                }\n                });\n              \n            })\n            .catch(err => {\n              console.log(`Error getting joinable rooms: ${err}`)\n            })\n        }\n        onPPChange = event => {\n            let { name, checked } = event.target;\n            let groupParticipants = {...this.state.newGroupChatParticipants};\n            groupParticipants[name] = checked;\n            this.setState({newGroupChatParticipants: groupParticipants});\n        } \n    render (){\n        let attachedClasses = [classes.SideDrawer, classes.Close];\n        if (this.props.show){\n            attachedClasses = [classes.SideDrawer, classes.Open];\n        }\n       return  (\n        <div className={attachedClasses.join(' ')}>\n            <div className={classes.divs} onClick={this.createNewGroupHandler}>Create a new group</div>\n            <form onSubmit={this.onCreateNewGroup} style={{display: this.state.showCreateForm ? 'block' : 'none'}}>\n                <Input \n                elementType='input'\n                elementConfig={{placeholder: 'Enter group name', type: 'text'}}\n                value={this.state.groupName}\n                invalid={this.state.isTouched && !this.state.isValid}\n                shouldValidate={true}\n                touched={this.state.isTouched}\n                name='groupName'\n                changed={ event => this.onChange(event, 'groupName')}\n            />\n                <h3>Add participants</h3>\n                {this.state.potentialParticipants.map((pp, i) => {\n                    return (\n                        <span key={i} className={classes.PP}>\n                            <input onChange={this.onPPChange} type=\"checkbox\" name={pp.name} checked={this.state.newGroupChatParticipants[pp.name]}/>\n                            <label htmlFor={pp.name}>{pp.name}</label>\n                        </span>\n                    )\n                })}\n                \n                <Button disabled={!this.state.groupName  && \n                !Object.keys(this.state.newGroupChatParticipants).map(key => {\n                    return this.state.newGroupChatParticipants[key]\n                }).includes(true)} btnType='Success'>Create</Button>\n            </form>\n            <div className={classes.divs} onClick={this.joinGroup}>Join a group</div>\n            <span style={{display: this.state.ShowJoinableRoomsList ? 'block' : 'none'}} className={classes.RoomsList}>\n                <JoinableRooms joinableRooms={this.state.joinableRooms} />  \n            </span>\n            <div className={classes.divs} onClick={this.startNewChatHandler}>Start a new chat</div>\n            <form onSubmit={this.onStartNewChat} style={{display: this.state.showNewChatForm ? 'block' : 'none'}}>\n                <input onChange={this.onChange} type='text' name='privateChatParticipant' placeholder='Who do you wanna chat with?' />    \n                <button>Submit</button>\n            </form>\n        </div>\n        );\n    \n}\n}\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateNewGroup: data => dispatch(actionCreators.createNewGroup(data)),\n        onStartNewChat: data => dispatch(actionCreators.startNewChat(data)),\n        joinGroup: () => dispatch(actionCreators.joinGroup())\n    }\n}\n}\nexport default connect(mapStateToProps)(SideDrawer);"]},"metadata":{},"sourceType":"module"}